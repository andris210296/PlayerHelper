/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.viewmaker;

import java.awt.EventQueue;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

import java.io.File;

import java.io.IOException;

import java.util.ArrayList;

import java.util.List;
import java.util.concurrent.TimeUnit;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

import javax.swing.SwingWorker;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

/**
 *
 * @author aandermann
 */
public class Tela extends javax.swing.JFrame {

    /**
     * Creates new form Tela
     */
    public Tela() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnView = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtEmailBody = new javax.swing.JTextPane();
        txtEmailBody.addMouseListener( new MouseAdapter() {

            @Override
            public void mouseClicked(MouseEvent me) {
                lblQtd.setText(String.valueOf(getLinksFromCopyPaste().size()));

                String links = "";
                for(String string:getLinksFromCopyPaste()){
                    links+= string +"\n";
                }
                txtEmailBody.setText(links);
            }
        }
    );
    jLabel3 = new javax.swing.JLabel();
    lblQtd = new javax.swing.JLabel();
    jProgressBar1 = new javax.swing.JProgressBar();
    jLabel4 = new javax.swing.JLabel();
    lblLinkName = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    txtGeckodriver = new javax.swing.JTextField();
    btnSearchDriver = new javax.swing.JButton();
    jLabel5 = new javax.swing.JLabel();
    txtLogin = new javax.swing.JTextField();
    jLabel6 = new javax.swing.JLabel();
    txtPassword = new javax.swing.JPasswordField();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    jLabel1.setText("Copy your e-mail content and click down here:");

    btnView.setText("View");
    btnView.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnViewActionPerformed(evt);
        }
    });

    txtEmailBody.setEditable(false);
    txtEmailBody.setAutoscrolls(false);
    txtEmailBody.setEnabled(false);
    txtEmailBody.setMaximumSize(new java.awt.Dimension(100, 100));
    jScrollPane2.setViewportView(txtEmailBody);

    jLabel3.setText("Quantity of videos to be viewed:");

    jProgressBar1.setStringPainted(true);

    jLabel4.setText("Viewing:");

    jLabel2.setText("geckodriver.exe location:");

    btnSearchDriver.setText("Search");
    btnSearchDriver.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnSearchDriverActionPerformed(evt);
        }
    });

    jLabel5.setText("Login:");

    jLabel6.setText("Password:");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane2)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jLabel3)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(lblQtd, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 934, Short.MAX_VALUE)
                    .addComponent(btnView))
                .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jLabel4)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(lblLinkName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtGeckodriver, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnSearchDriver))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPassword))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addContainerGap())
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel2)
                .addComponent(txtGeckodriver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btnSearchDriver))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel5)
                .addComponent(txtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel6)
                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jLabel1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(btnView)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblQtd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel4)
                .addComponent(lblLinkName, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(19, 19, 19))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        if (getLinksFromCopyPaste().size() > 0 && !txtGeckodriver.getText().isEmpty()) {
            viewLinks(getLinksFromCopyPaste());
        } else {
            JOptionPane.showMessageDialog(null, "You must have links to be viewed and geckodriver.exe selected");
        }
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnSearchDriverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchDriverActionPerformed
        JFileChooser file = new JFileChooser();
        file.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int i = file.showSaveDialog(null);
        if (i == 1) {
            txtGeckodriver.setText("");
        } else {
            File arquivo = file.getSelectedFile();
            txtGeckodriver.setText(arquivo.getPath());
        }
    }//GEN-LAST:event_btnSearchDriverActionPerformed

    private String getFileNameFromLink(String link) {

        String fileName = "";

        String[] linkArray = link.split("/");

        for (int i = 0; i < linkArray.length; i++) {
            if (linkArray[i].equals("fileName")) {
                return linkArray[i + 1];
            }
        }
        return fileName;
    }

    private List<String> getLinksFromCopyPaste() {
        Clipboard clipboard;

        clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();

        List links = new ArrayList();

        try {
            Object data = clipboard.getData(DataFlavor.allHtmlFlavor);
            Document document = Jsoup.parse(data.toString());

            Elements elements = document.select("a[href]");

            for (Element link : elements) {

                String stringLink = link.attr("abs:href");
                if (stringLink.contains("play.ericsson")) {
                    links.add(stringLink);
                }
            }
            return links;

        } catch (UnsupportedFlavorException | IOException ex) {
            ex.printStackTrace();
        }
        return links;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tela().setVisible(true);
            }
        });
    }

    private void viewLinks(List<String> links) {
       
        for (final String viewLink : getLinksFromCopyPaste()) {
            EventQueue.invokeLater(new Runnable() {
                @Override
                public void run() {
                    new BackgroundWorker(viewLink).execute();
                }
            });
        }
    }

    public class BackgroundWorker extends SwingWorker<Void, Void> {

        String viewLink;

        public BackgroundWorker(final String viewLink) {

            this.viewLink = viewLink;

            addPropertyChangeListener(new PropertyChangeListener() {
                @Override
                public void propertyChange(PropertyChangeEvent evt) {
                    lblLinkName.setText(viewLink);
                    jProgressBar1.setValue(getProgress());
                }
            });
        }

        @Override
        protected Void doInBackground() throws Exception {

            System.setProperty("webdriver.gecko.driver", txtGeckodriver.getText());
            
            WebDriver driver = new FirefoxDriver();
            driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);

            driver.get(viewLink);
            
            setProgress(25);
            
            // Login
            WebElement userLogin = driver.findElement(By.xpath("//*[@id=\"user\"]"));
            userLogin.sendKeys(txtLogin.getText());
            WebElement userPassword = driver.findElement(By.xpath("//*[@id=\"password\"]"));
            userPassword.sendKeys(txtPassword.getText());
            driver.findElement(By.cssSelector("#IMAGE1")).click();                  
                    
            setProgress(50);
            
            // Click play button
            WebDriverWait wait = new WebDriverWait(driver, 20);
            WebElement playerIframe = wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector("#kplayer_ifp")));
            driver.switchTo().frame(playerIframe);
            driver.findElement(By.cssSelector("button.comp:nth-child(1)")).click();
            
            setProgress(75);

            // Slide video until the end
            WebElement slider = driver.findElement(By.xpath("/html/body/div[1]/div[3]/div[1]/div[3]"));
            Actions move = new Actions(driver);
            Action action = (Action) move.dragAndDropBy(slider, 500, 0).build();
            action.perform();

            setProgress(100);
            
            driver.close();

            return null;
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearchDriver;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblLinkName;
    private javax.swing.JLabel lblQtd;
    private javax.swing.JTextPane txtEmailBody;
    private javax.swing.JTextField txtGeckodriver;
    private javax.swing.JTextField txtLogin;
    private javax.swing.JPasswordField txtPassword;
    // End of variables declaration//GEN-END:variables
}
